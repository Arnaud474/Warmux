#! /bin/bash
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/bash}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by Warmux $as_me 11.04, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" Makefile data/Makefile src/Makefile lib/Makefile lib/fixedpoint/Makefile lib/warmux/Makefile po/Makefile lib/warmux-server/Makefile doc/Makefile tools/Makefile tools/list_games/Makefile tools/servers/Makefile tools/servers/game_server/Makefile tools/servers/index_server/Makefile"
config_headers=" lib/warmux/include/config_autotools.h"
config_commands=" po-directories depfiles"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <warmux-dev@gna.org>."

ac_cs_config=""
ac_cs_version="\
Warmux config.status 11.04
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/bin/mkdir -p'
AWK='mawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/bash './configure'  $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/bash $*" >&6
  CONFIG_SHELL='/bin/bash'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS. But hide it
    # from automake < 1.5.
    eval 'OBSOLETE_ALL_LINGUAS''=""'
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="%UNSET%"

AMDEP_TRUE="" ac_aux_dir="."


# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "po-directories") CONFIG_COMMANDS="$CONFIG_COMMANDS po-directories" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "data/Makefile") CONFIG_FILES="$CONFIG_FILES data/Makefile" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "lib/Makefile") CONFIG_FILES="$CONFIG_FILES lib/Makefile" ;;
    "lib/fixedpoint/Makefile") CONFIG_FILES="$CONFIG_FILES lib/fixedpoint/Makefile" ;;
    "lib/warmux/Makefile") CONFIG_FILES="$CONFIG_FILES lib/warmux/Makefile" ;;
    "po/Makefile") CONFIG_FILES="$CONFIG_FILES po/Makefile" ;;
    "lib/warmux-server/Makefile") CONFIG_FILES="$CONFIG_FILES lib/warmux-server/Makefile" ;;
    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
    "tools/Makefile") CONFIG_FILES="$CONFIG_FILES tools/Makefile" ;;
    "tools/list_games/Makefile") CONFIG_FILES="$CONFIG_FILES tools/list_games/Makefile" ;;
    "tools/servers/Makefile") CONFIG_FILES="$CONFIG_FILES tools/servers/Makefile" ;;
    "tools/servers/game_server/Makefile") CONFIG_FILES="$CONFIG_FILES tools/servers/game_server/Makefile" ;;
    "tools/servers/index_server/Makefile") CONFIG_FILES="$CONFIG_FILES tools/servers/index_server/Makefile" ;;
    "lib/warmux/include/config_autotools.h") CONFIG_HEADERS="$CONFIG_HEADERS lib/warmux/include/config_autotools.h" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["BUILD_ENV"]=""
S["DATA_FILES"]="./.nomedia ./sound/default/weapons/m16_cartridge.ogg ./sound/default/weapons/riot_bomb_exp.ogg ./sound/default/weapons/footbomb_bounce.ogg ./sound/d"\
"efault/weapons/jetpack.ogg ./sound/default/weapons/embers2.ogg ./sound/default/weapons/syringe.ogg ./sound/default/weapons/embers3.ogg ./sound/defau"\
"lt/weapons/airhammer_selected.ogg ./sound/default/weapons/ricoche2.ogg ./sound/default/weapons/ricoche3.ogg ./sound/default/weapons/shotgun.ogg ./so"\
"und/default/weapons/grapple_attaching.ogg ./sound/default/weapons/teleport_start.ogg ./sound/default/weapons/cluzooka_hit.ogg ./sound/default/weapon"\
"s/polecat.ogg ./sound/default/weapons/dynamite_exp.ogg ./sound/default/weapons/cluzooka_shot.ogg ./sound/default/weapons/slap.ogg ./sound/default/we"\
"apons/rocket_flying.ogg ./sound/default/weapons/explosion7.ogg ./sound/default/weapons/load.ogg ./sound/default/weapons/explosion6.ogg ./sound/defau"\
"lt/weapons/baseball.ogg ./sound/default/weapons/explosion1.ogg ./sound/default/weapons/teleport_land.ogg ./sound/default/weapons/auto_rocket_flying."\
"ogg ./sound/default/weapons/explosion4.ogg ./sound/default/weapons/explosion2.ogg ./sound/default/weapons/anvil_fall.ogg ./sound/default/weapons/sui"\
"cide.ogg ./sound/default/weapons/aircraft_flying.ogg ./sound/default/weapons/anvil_collision.ogg ./sound/default/weapons/embers1.ogg ./sound/default"\
"/weapons/flame.ogg ./sound/default/weapons/m16.ogg ./sound/default/weapons/explosion9.ogg ./sound/default/weapons/gun.ogg ./sound/default/weapons/ex"\
"plosion5.ogg ./sound/default/weapons/grapple_detaching.ogg ./sound/default/weapons/disco_grenade_music.ogg ./sound/default/weapons/dynamite_fuze.ogg"\
" ./sound/default/weapons/explosion8.ogg ./sound/default/weapons/grapple_cable.ogg ./sound/default/weapons/homerun.ogg ./sound/default/weapons/ricoch"\
"e1.ogg ./sound/default/weapons/aircraft_bomb_falling.ogg ./sound/default/weapons/riot_flying.ogg ./sound/default/weapons/gnu_bounce.ogg ./sound/defa"\
"ult/weapons/mine_beep.ogg ./sound/default/weapons/blowtorch.ogg ./sound/default/weapons/supertux_swimming.ogg ./sound/default/weapons/explosion3.ogg"\
" ./sound/default/weapons/grenade_bounce.ogg ./sound/default/weapons/lowgravity.ogg ./sound/default/weapons/construct.ogg ./sound/default/weapons/sup"\
"ertux_flying.ogg ./sound/default/weapons/airhammer_used.ogg ./sound/default/profile.xml ./sound/default/misc/error.ogg ./sound/default/misc/weapon_h"\
"ide.ogg ./sound/default/misc/character_change.ogg ./sound/default/misc/end_turn.ogg ./sound/default/misc/newcomer.ogg ./sound/default/misc/change_we"\
"apon.ogg ./sound/default/misc/box_falling.ogg ./sound/default/misc/sherif.ogg ./sound/default/misc/weapon_show.ogg ./sound/default/misc/victory.ogg "\
"./sound/default/misc/step.ogg ./sound/default/misc/countdown-endturn.ogg ./sound/default/misc/box_picking_up.ogg ./sound/default/misc/cancel.ogg ./s"\
"ound/default/misc/start_turn.ogg ./sound/default/misc/frog_music.ogg ./sound/default/misc/box_hitting_ground.ogg ./sound/default/misc/clic.ogg ./sou"\
"nd/default/misc/skip_turn.ogg ./sound/default/misc/ok.ogg ./sound/default/misc/sink.ogg ./sound/default/voices/injured_medium4.ogg ./sound/default/v"\
"oices/jump.ogg ./sound/default/voices/superjump.ogg ./sound/default/voices/injured_light2.ogg ./sound/default/voices/fire2.ogg ./sound/default/voice"\
"s/injured_medium2.ogg ./sound/default/voices/injured_medium5.ogg ./sound/default/voices/theme6.ogg ./sound/default/voices/death1.ogg ./sound/default"\
"/voices/out.ogg ./sound/default/voices/injured_light5.ogg ./sound/default/voices/theme3.ogg ./sound/default/voices/theme1.ogg ./sound/default/voices"\
"/suicide.ogg ./sound/default/voices/injured_light3.ogg ./sound/default/voices/backjump.ogg ./sound/default/voices/injured_medium3.ogg ./sound/defaul"\
"t/voices/fire1.ogg ./sound/default/voices/injured_high2.ogg ./sound/default/voices/fire4.ogg ./sound/default/voices/happy1.ogg ./sound/default/voice"\
"s/death5.ogg ./sound/default/voices/fire5.ogg ./sound/default/voices/death4.ogg ./sound/default/voices/injured_medium1.ogg ./sound/default/voices/in"\
"jured_high4.ogg ./sound/default/voices/friendly_fire1.ogg ./sound/default/voices/theme7.ogg ./sound/default/voices/theme9.ogg ./sound/default/voices"\
"/death2.ogg ./sound/default/voices/theme5.ogg ./sound/default/voices/injured_high5.ogg ./sound/default/voices/theme2.ogg ./sound/default/voices/fire"\
"3.ogg ./sound/default/voices/friendly_fire3.ogg ./sound/default/voices/injured_high1.ogg ./sound/default/voices/injured_light1.ogg ./sound/default/v"\
"oices/theme8.ogg ./sound/default/voices/theme4.ogg ./sound/default/voices/injured_high3.ogg ./sound/default/voices/death3.ogg ./sound/default/voices"\
"/injured_light4.ogg ./sound/default/voices/fire6.ogg ./sound/default/voices/friendly_fire2.ogg ./sound/profile.dtd ./weapons.xml ./warmux_default_co"\
"nfig.xml ./menu.xml ./cursors.xml ./cursors.dtd ./weapon/construct/construct_icon.png ./weapon/construct/construct_spr.png ./weapon/construct/constr"\
"uct_icon_mini.png ./weapon/syringe/syringe.png ./weapon/syringe/syringe_ico.png ./weapon/footbomb/footbomb_ico.png ./weapon/footbomb/bilson.png ./we"\
"apon/shotgun/buckshot.png ./weapon/shotgun/shotgun_ico.png ./weapon/shotgun/shotgun.png ./weapon/anvil/anvil_ico.png ./weapon/anvil/anvil.png ./weap"\
"on/anvil/anvil_launcher.png ./weapon/bounce_ball/bounce_ball_ico.png ./weapon/bounce_ball/bounce_ball.png ./weapon/snipe_rifle/snipe_rifle.png ./wea"\
"pon/snipe_rifle/snipe_rifle_laser.png ./weapon/snipe_rifle/gun_fire.png ./weapon/snipe_rifle/snipe_rifle_ico.png ./weapon/air_attack/obus.png ./weap"\
"on/air_attack/air_attack_plane.png ./weapon/air_attack/air_attack.png ./weapon/air_attack/air_attack_ico.png ./weapon/supertux/supertux_ico.png ./we"\
"apon/supertux/superman.png ./weapon/supertux/supertux.png ./weapon/dynamite/dynamite_ico.png ./weapon/dynamite/dynamite_ani.png ./weapon/dynamite/dy"\
"namite.png ./weapon/mine/mine.png ./weapon/mine/mine_ico.png ./weapon/mine/mine_anim.png ./weapon/mine/mine_impact.png ./weapon/airhammer/airhammer."\
"png ./weapon/airhammer/airhammer_impact.png ./weapon/airhammer/airhammer_ico.png ./weapon/cluster_bomb/clusterbomb.png ./weapon/cluster_bomb/cluster"\
".png ./weapon/cluster_bomb/clusterbomb_ico.png ./weapon/parachute/parachute.png ./weapon/parachute/parachute_ico.png ./weapon/rail_gun/rail_gun_ico."\
"png ./weapon/rail_gun/rail_bullet.png ./weapon/rail_gun/gun_fire.png ./weapon/rail_gun/rail_gun.png ./weapon/rail_gun/rail_gun_laser.png ./weapon/ba"\
"zooka/missile.png ./weapon/bazooka/green_bazooka.png ./weapon/bazooka/baz_cible.png ./weapon/bazooka/bazooka_auto_ico.png ./weapon/bazooka/brown_baz"\
"ooka.png ./weapon/bazooka/yellow_bazooka.png ./weapon/bazooka/bazooka_ico.png ./weapon/blowtorch/blowtorch_ico.png ./weapon/blowtorch/fire.png ./wea"\
"pon/blowtorch/blowtorch.png ./weapon/teleportation/teleportation.png ./weapon/teleportation/teleportation_ico.png ./weapon/m16/m16.png ./weapon/m16/"\
"m16_ico.png ./weapon/baseball/baseball_ico.png ./weapon/baseball/baseball.png ./weapon/baseball/baseball_hit.png ./weapon/polecat/polecatlauncher.pn"\
"g ./weapon/polecat/polecat.png ./weapon/polecat/polecat_fart.png ./weapon/polecat/polecat_ico.png ./weapon/jet_pack/jet_pack_ico.png ./weapon/slap/s"\
"lap.png ./weapon/slap/slap_ico.png ./weapon/cluzooka/missile.png ./weapon/cluzooka/dark_bazooka.png ./weapon/cluzooka/cluster.png ./weapon/cluzooka/"\
"cluz_ico.png ./weapon/flamethrower/flame_ico.png ./weapon/flamethrower/flame.png ./weapon/flamethrower/flame_bullet.png ./weapon/gnu/gnulauncher.png"\
" ./weapon/gnu/gnu_ico.png ./weapon/gnu/gnu.png ./weapon/disco_grenade/disco_grenade_ico.png ./weapon/disco_grenade/disco_grenade.png ./weapon/lowgra"\
"v/lowgrav_ico.png ./weapon/suicide/suicide.png ./weapon/suicide/suicide_ico.png ./weapon/grapple/grapple_node.png ./weapon/grapple/grapple.png ./wea"\
"pon/grapple/grapple_ico.png ./weapon/grapple/grapple_hook.png ./weapon/skip_turn/skipturn_ico.png ./weapon/skip_turn/skipturn.png ./weapon/grenade/g"\
"renade_ico.png ./weapon/grenade/grenade.png ./weapon/gun/gun.png ./weapon/gun/gun_ico.png ./weapon/gun/gun_fire.png ./weapon/gun/gun_bullet.png ./we"\
"apon/riot_bomb/missile.png ./weapon/riot_bomb/riot_ico.png ./team/tux/team.xml ./team/tux/dead.png ./team/tux/flag.png ./team/tux/flag64.png ./team/"\
"beastie/team.xml ./team/beastie/dead.png ./team/beastie/flag.png ./team/beastie/flag64.png ./team/badassgoat/team.xml ./team/badassgoat/dead.png ./t"\
"eam/badassgoat/flag.png ./team/badassgoat/team.xml~ ./team/badassgoat/flag64.png ./team/snort/team.xml ./team/snort/dead.png ./team/snort/flag.png ."\
"/team/snort/flag64.png ./team/konqi/team.xml ./team/konqi/dead.png ./team/konqi/flag.png ./team/konqi/flag64.png ./team/postfix/team.xml ./team/post"\
"fix/dead.png ./team/postfix/flag.png ./team/postfix/flag64.png ./team/workrave/team.xml ./team/workrave/dead.png ./team/workrave/flag.png ./team/wor"\
"krave/flag64.png ./team/team.dtd ./team/firefox/team.xml ./team/firefox/dead.png ./team/firefox/flag.png ./team/firefox/flag64.png ./team/thunderbir"\
"d/team.xml ./team/thunderbird/dead.png ./team/thunderbird/flag.png ./team/thunderbird/flag64.png ./team/suse/team.xml ./team/suse/dead.png ./team/su"\
"se/flag.png ./team/suse/flag64.png ./team/spip/team.xml ./team/spip/dead.png ./team/spip/flag.png ./team/spip/flag64.png ./team/hexley/team.xml ./te"\
"am/hexley/dead.png ./team/hexley/flag.png ./team/hexley/flag64.png ./team/php/team.xml ./team/php/dead.png ./team/php/flag.png ./team/php/flag64.png"\
" ./team/gnu/team.xml ./team/gnu/dead.png ./team/gnu/flag.png ./team/gnu/flag64.png ./team/pidgin/team.xml ./team/pidgin/dead.png ./team/pidgin/flag."\
"png ./team/pidgin/flag64.png ./team/bugzilla/team.xml ./team/bugzilla/dead.png ./team/bugzilla/flag.png ./team/bugzilla/flag64.png ./team/wilber/tea"\
"m.xml ./team/wilber/dead.png ./team/wilber/flag.png ./team/wilber/flag64.png ./map/banquise/background.jpg ./map/banquise/banquise.png ./map/banquis"\
"e/preview.jpg ./map/banquise/flocon.png ./map/banquise/config.xml ./map/crystal/sky.jpg ./map/crystal/crystal.png ./map/crystal/preview.jpg ./map/cr"\
"ystal/config.xml ./map/tic-tac-toe/fg.png ./map/tic-tac-toe/preview.jpg ./map/tic-tac-toe/bg.jpg ./map/tic-tac-toe/config.xml ./map/tic-tac-toe/part"\
"_effect_strip.png ./map/urbanheights/radar_fg.png ./map/urbanheights/radar_pr.jpg ./map/urbanheights/radar_bg.jpg ./map/urbanheights/earthstrip.png "\
"./map/urbanheights/config.xml ./map/pirates/pirates.png ./map/pirates/preview.jpg ./map/pirates/islands.jpg ./map/pirates/config.xml ./map/construct"\
"ion/sky.jpg ./map/construction/sky2.png ./map/construction/raindrop.png ./map/construction/sky1.png ./map/construction/preview.jpg ./map/constructio"\
"n/sky0.png ./map/construction/map.png ./map/construction/config.xml ./map/leafs/birds.png ./map/leafs/preview.jpg ./map/leafs/front.png ./map/leafs/"\
"config.xml ./map/leafs/back.jpg ./map/desert/desert_preview.jpg ./map/desert/desert.png ./map/desert/config.xml ./map/desert/desert_bg.jpg ./map/mon"\
"keybubble/sky_layer-0.jpg ./map/monkeybubble/one_layer_sky.jpg ./map/monkeybubble/feuille.png ./map/monkeybubble/preview.jpg ./map/monkeybubble/sky_"\
"layer-3.png ./map/monkeybubble/map.png ./map/monkeybubble/config.xml ./map/monkeybubble/sky_layer-2.png ./map/monkeybubble/sky_layer-1.png ./map/ran"\
"domamoebas/sky.jpg ./map/randomamoebas/texture.png ./map/randomamoebas/preview.jpg ./map/randomamoebas/config.xml ./map/chess/sky.jpg ./map/chess/sk"\
"y1.png ./map/chess/preview.jpg ./map/chess/sky0.png ./map/chess/map.png ./map/chess/config.xml ./map/montagnes/sky.jpg ./map/montagnes/preview.jpg ."\
"/map/montagnes/map.png ./map/montagnes/flocon.png ./map/montagnes/config.xml ./map/apocalypse/mini.jpg ./map/apocalypse/apocalypse.png ./map/apocaly"\
"pse/apocalypse.jpg ./map/apocalypse/vent.png ./map/apocalypse/config.xml ./map/ninja/sky_layer-5.png ./map/ninja/particule.png ./map/ninja/sky_layer"\
"-0.jpg ./map/ninja/one_layer_sky.jpg ./map/ninja/preview.jpg ./map/ninja/sky_layer-3.png ./map/ninja/map.png ./map/ninja/sky_layer-4.png ./map/ninja"\
"/config.xml ./map/ninja/sky_layer-2.png ./map/ninja/sky_layer-1.png ./map/paint/preview.jpg ./map/paint/map.png ./map/paint/sky.png ./map/paint/conf"\
"ig.xml ./map/birds/particule.png ./map/birds/sky_layer-0.jpg ./map/birds/one_layer_sky.jpg ./map/birds/preview.jpg ./map/birds/map.png ./map/birds/c"\
"onfig.xml ./map/birds/sky_layer-2.png ./map/birds/sky_layer-1.png ./map/space2/sky.jpg ./map/space2/preview.jpg ./map/space2/map.png ./map/space2/co"\
"nfig.xml ./map/greehills/greenhills_sky.jpg ./map/greehills/preview.jpg ./map/greehills/greenhills.png ./map/greehills/star.png ./map/greehills/conf"\
"ig.xml ./map/bankiz/sky.jpg ./map/bankiz/bankiz.png ./map/bankiz/preview.jpg ./map/bankiz/flocon.png ./map/bankiz/config.xml ./map/paradis/decor_par"\
"adis.png ./map/paradis/paradis_preview.jpg ./map/paradis/decor_paradis_bg.jpg ./map/paradis/config.xml ./map/frog/sky.jpg ./map/frog/preview.jpg ./m"\
"ap/frog/map.png ./map/frog/config.xml ./map/goodandevil/sky.jpg ./map/goodandevil/preview.jpg ./map/goodandevil/goodandevil.png ./map/goodandevil/co"\
"nfig.xml ./map/lonely_island/sky.jpg ./map/lonely_island/preview.jpg ./map/lonely_island/map.png ./map/lonely_island/wind_particules.png ./map/lonel"\
"y_island/config.xml ./map/arbre/fond.jpg ./map/arbre/preview.jpg ./map/arbre/gland-anim.png ./map/arbre/arbre.png ./map/arbre/config.xml ./map/hive/"\
"fg.png ./map/hive/preview.jpg ./map/hive/bg.jpg ./map/hive/config.xml ./map/hive/part_effect_strip.png ./map/island/sky.jpg ./map/island/island.png "\
"./map/island/preview.jpg ./map/island/config.xml ./map/halloween/sky.jpg ./map/halloween/preview.jpg ./map/halloween/map.png ./map/halloween/config."\
"xml ./map/halloween/wp.png ./map/pillars/fg.png ./map/pillars/preview.jpg ./map/pillars/bg.jpg ./map/pillars/config.xml ./map/country/sky.jpg ./map/"\
"country/preview.jpg ./map/country/map.png ./map/country/config.xml ./map/champignon/sky.jpg ./map/champignon/preview.jpg ./map/champignon/config.xml"\
" ./map/champignon/background.png ./map/arcaderoom/wind_particle.png ./map/arcaderoom/background.jpg ./map/arcaderoom/preview.jpg ./map/arcaderoom/ma"\
"p.png ./map/arcaderoom/config.xml ./map/moon-4m/sky.jpg ./map/moon-4m/preview.jpg ./map/moon-4m/map.png ./map/moon-4m/config.xml ./map/icebergs/sky."\
"jpg ./map/icebergs/preview.jpg ./map/icebergs/map.png ./map/icebergs/config.xml ./map/icebergs/wp.png ./map/aquarium/sky.jpg ./map/aquarium/preview."\
"jpg ./map/aquarium/config.xml ./map/aquarium/background.png ./map/battlenight/battlenight-bg.jpg ./map/battlenight/battlenight-all.jpg ./map/battlen"\
"ight/battlenight-fg.png ./map/battlenight/config.xml ./map/easterisland/sky.jpg ./map/easterisland/preview.jpg ./map/easterisland/map.png ./map/east"\
"erisland/config.xml ./map/easterisland/wp.png ./map/catacombes/preview.jpg ./map/catacombes/config.xml ./map/catacombes/sky1.jpg ./map/catacombes/ba"\
"ckground1.png ./map/pumpkins/sky.jpg ./map/pumpkins/feuille.png ./map/pumpkins/preview.jpg ./map/pumpkins/map.png ./map/pumpkins/config.xml ./map/he"\
"ll/bones.png ./map/hell/preview.jpg ./map/hell/config.xml ./map/hell/hell.png ./map/hell/hellsky.jpg ./map/junglemountain/drseuss.jpg ./map/junglemo"\
"untain/goo_drop.png ./map/junglemountain/preview.jpg ./map/junglemountain/config.xml ./map/junglemountain/dseuss_fg.png ./map/prehistorik/fond.jpg ."\
"/map/prehistorik/prehistorik.png ./map/prehistorik/preview.jpg ./map/prehistorik/config.xml ./map/electronik/sky.jpg ./map/electronik/preview.jpg ./"\
"map/electronik/config.xml ./map/electronik/background.png ./map/randomisland/tresor2.png ./map/randomisland/sky.jpg ./map/randomisland/texture.png ."\
"/map/randomisland/palm-tree.png ./map/randomisland/preview.jpg ./map/randomisland/config.xml ./map/randomisland/tresor1.png ./map/oktopus/sky.jpg ./"\
"map/oktopus/bulle.png ./map/oktopus/preview.jpg ./map/oktopus/map.png ./map/oktopus/config.xml ./map/map.dtd ./map/snow/particule.png ./map/snow/one"\
"_layer_sky.jpg ./map/snow/preview.jpg ./map/snow/map.png ./map/snow/config.xml ./map/vulcano/preview.jpg ./map/vulcano/sky2.jpg ./map/vulcano/config"\
".xml ./map/vulcano/background.png ./map/random_map.jpg ./map/abyss/bubble.png ./map/abyss/background.jpg ./map/abyss/foreground.png ./map/abyss/prev"\
"iew.jpg ./map/abyss/config.xml ./map/towers/sky.jpg ./map/towers/preview.jpg ./map/towers/map.png ./map/towers/config.xml ./map/farm/particule.png ."\
"/map/farm/sky_layer-0.jpg ./map/farm/one_layer_sky.jpg ./map/farm/preview.jpg ./map/farm/sky_layer-3.png ./map/farm/map.png ./map/farm/config.xml ./"\
"map/farm/sky_layer-2.png ./map/farm/sky_layer-1.png ./map/qingqong/sky.jpg ./map/qingqong/preview.jpg ./map/qingqong/config.xml ./map/qingqong/qingq"\
"ong.png ./map/wildwestdv/sky.jpg ./map/wildwestdv/preview.jpg ./map/wildwestdv/map.png ./map/wildwestdv/config.xml ./map/cheese/sky.jpg ./map/cheese"\
"/emmental.png ./map/cheese/preview.jpg ./map/cheese/minicheese.png ./map/cheese/config.xml ./map/funky_island/island_bg.jpg ./map/funky_island/cloud"\
"s.png ./map/funky_island/island.png ./map/funky_island/preview.jpg ./map/funky_island/config.xml ./menu/timing_switch.png ./menu/background_loading."\
"jpg ./menu/check.png ./menu/sound_frequency.png ./menu/background_network.jpg ./menu/team_number.png ./menu/player_local_ai.png ./menu/help_replay.p"\
"ng ./menu/right.png ./menu/ico_maps.png ./menu/ico_sounds.png ./menu/save.png ./menu/display_energy.png ./menu/left-right_mouse.png ./menu/help_shor"\
"tkeys.png ./menu/i_credits.png ./menu/gravity.png ./menu/enabled.png ./menu/display_wind_particles.png ./menu/sound_effects_enable.png ./menu/player"\
"_remote_human.png ./menu/timing_end_turn.png ./menu/i_benchmark.png ./menu/warning.png ./menu/annulus_background.png ./menu/background.jpg ./menu/i_"\
"quit.png ./menu/ico_skins.png ./menu/i_replay.png ./menu/timing_death.png ./menu/fullscreen.png ./menu/i_backtobattle.png ./menu/help_team_selection"\
".jpg ./menu/cancel.png ./menu/key_alt.png ./menu/help_touch_interface.png ./menu/help_ingame.jpg ./menu/quit.png ./menu/big_right.png ./menu/init_en"\
"ergy.png ./menu/max_energy.png ./menu/left.png ./menu/display_name.png ./menu/validate.png ./menu/big_left.png ./menu/key_shift.png ./menu/button.pn"\
"g ./menu/fps.png ./menu/music_enable.png ./menu/down.png ./menu/player_local_human.png ./menu/disabled_back.png ./menu/i_network.png ./menu/bip.png "\
"./menu/i_update.png ./menu/death_energy.png ./menu/del_custom_team.png ./menu/minus.png ./menu/i_help.png ./menu/help_game_mode.jpg ./menu/padlock.p"\
"ng ./menu/disabled_front.png ./menu/game_mode.png ./menu/annulus_foreground.png ./menu/refresh.png ./menu/timing_turn.png ./menu/ico_weapons.png ./m"\
"enu/player_remote_ai.png ./menu/up.png ./menu/help_minimap.png ./menu/help_interface.png ./menu/resolution.png ./menu/ico_network.png ./menu/backgro"\
"und_main.jpg ./menu/send_txt.png ./menu/key_ctrl.png ./menu/podium.png ./menu/scroll_on_border.png ./menu/plus.png ./menu/i_options.png ./menu/i_pla"\
"y.png ./menu/multisky.png ./menu/add_custom_team.png ./warmux_default_maemo_config.xml ./warmux_default_android_config.xml ./authors.dtd ./weapons.d"\
"td ./music/ingame/circux.m3u ./music/ingame/circux.ogg ./music/ingame/diabolicux.ogg ./music/ingame/construction.ogg ./music/ingame/Olivier_Militon."\
"-.Etrange_epouvantable.ogg ./music/ingame/Olivier_Militon.-.Vers_solitaire.ogg ./music/ingame/diabolicux.m3u ./music/ingame/woodlux.m3u ./music/inga"\
"me/exoticux.m3u ./music/ingame/Olivier_Militon.-.Apnee.ogg ./music/ingame/ingame.m3u ./music/ingame/exoticux.ogg ./music/ingame/Olivier_Militon.-.Vo"\
"gue_a_lame.ogg ./music/ingame/fear.m3u ./music/ingame/sea.m3u ./music/ingame/monkey.m3u ./music/ingame/woodlux.ogg ./music/ingame/Olivier_Militon.-."\
"Like_a_rock.ogg ./music/ingame/construction.m3u ./music/ingame/funfair.m3u ./music/ingame/Mike_Errecart.-.Monkey-bubble.ogg ./music/ingame/Olivier_M"\
"iliton.-.Apnee2.ogg ./music/menu/menu.m3u ./music/menu/Divertissement_pour_flute.ogg ./music/profile.xml ./graphism.dtd ./interface/whitetheme/curso"\
"rs/arrow-down.left.png ./interface/whitetheme/cursors/arrow-down.right.png ./interface/whitetheme/cursors/hand-fire.png ./interface/whitetheme/curso"\
"rs/arrow-right.png ./interface/whitetheme/cursors/arrow-down.png ./interface/whitetheme/cursors/arrow-left.png ./interface/whitetheme/cursors/here-f"\
"rom-left.png ./interface/whitetheme/cursors/arrow-top.png ./interface/whitetheme/cursors/arrow-top.left.png ./interface/whitetheme/cursors/arrow-top"\
".right.png ./interface/whitetheme/cursors/here-from-right.png ./interface/whitetheme/cursors/hand-cursor.png ./interface/whitetheme/cursors/hand-mov"\
"e.png ./interface/whitetheme/lastfire.png ./interface/whitetheme/box_little_hide.png ./interface/whitetheme/pointer.png ./interface/whitetheme/wind_"\
"indicator.png ./interface/whitetheme/wind.png ./interface/whitetheme/box_big_hide.png ./interface/whitetheme/box_big.png ./interface/whitetheme/box_"\
"little.png ./interface/whitetheme/hourglass.png ./interface/whitetheme/clock.png ./interface/whitetheme/arrow_turn.png ./interface/whitetheme/clock_"\
"emergency.png ./interface/whitetheme/arrow_jump.png ./interface/not_skin/readme.txt ./interface/not_skin/background_help.png ./interface/not_skin/ba"\
"ckground_replay.png ./interface/not_skin/small_background_interface.png ./interface/not_skin/background_control_interface.png ./interface/not_skin/b"\
"ackground_interface.png ./game_mode/blitz.xml ./game_mode/game_mode.dtd ./game_mode/classic.xml ./game_mode/unlimited.xml ./game_mode/default_object"\
"s.xml ./game_mode/objects.dtd ./game_mode/benchmark.xml ./game_mode/skin_viewer.xml ./icon/uninstall.svg ./icon/uninstall_128x128.png ./icon/install"\
".xpm ./icon/warmux_256x256.png ./icon/warmux_128x128.xpm ./icon/install_128x128.png ./icon/warmux.ico ./icon/warmux_512x512.png ./icon/warmux.svg ./"\
"icon/install.svg ./icon/warmux.xpm ./icon/warmux.mif ./icon/uninstall.ico ./icon/install_32x32.png ./icon/warmux_32x32.png ./icon/install.ico ./icon"\
"/warmux.mbm ./icon/install_64x64.png ./icon/warmux.icns ./icon/uninstall.xpm ./icon/warmux_128x128.png ./icon/uninstall_32x32.png ./icon/uninstall_6"\
"4x64.png ./icon/warmux_64x64.png ./warmux_default_symbian_config.xml ./authors.xml ./body/aliases.xml ./body/tux/black_eyes.png ./body/tux/black_hor"\
"noverleft.png ./body/tux/black_tail.png ./body/tux/sick_head.png ./body/tux/black_arm1left.png ./body/tux/black_arm3right.png ./body/tux/hornoverlef"\
"t.png ./body/tux/body.png ./body/tux/eyes.png ./body/tux/dead.png ./body/tux/black_head.png ./body/tux/footleft.png ./body/tux/footright.png ./body/"\
"tux/black_hornunderright.png ./body/tux/head.png ./body/tux/hornoverright.png ./body/tux/black_footleft.png ./body/tux/eyelid.png ./body/tux/black_h"\
"ornunderleft.png ./body/tux/back.png ./body/tux/arm1left.png ./body/tux/black_arm2right.png ./body/tux/arm1right.png ./body/tux/arm2right.png ./body"\
"/tux/black_arm2left.png ./body/tux/black_arm3left.png ./body/tux/noze.png ./body/tux/black_footright.png ./body/tux/hornunderleft.png ./body/tux/bla"\
"ck_hornoverright.png ./body/tux/black_back.png ./body/tux/arm3left.png ./body/tux/black_eyelid.png ./body/tux/black_pupil.png ./body/tux/pupil.png ."\
"/body/tux/hornunderright.png ./body/tux/black_body.png ./body/tux/black_hat.png ./body/tux/hat.png ./body/tux/tail.png ./body/tux/arm3right.png ./bo"\
"dy/tux/config.xml ./body/tux/black_noze.png ./body/tux/arm2left.png ./body/tux/black_arm1right.png ./body/beastie/black_eyes.png ./body/beastie/blac"\
"k_hornoverleft.png ./body/beastie/black_tail.png ./body/beastie/sick_head.png ./body/beastie/black_arm1left.png ./body/beastie/black_arm3right.png ."\
"/body/beastie/hornoverleft.png ./body/beastie/body.png ./body/beastie/eyes.png ./body/beastie/dead.png ./body/beastie/black_head.png ./body/beastie/"\
"footleft.png ./body/beastie/footright.png ./body/beastie/black_hornunderright.png ./body/beastie/head.png ./body/beastie/hornoverright.png ./body/be"\
"astie/black_footleft.png ./body/beastie/eyelid.png ./body/beastie/black_hornunderleft.png ./body/beastie/back.png ./body/beastie/arm1left.png ./body"\
"/beastie/black_arm2right.png ./body/beastie/arm1right.png ./body/beastie/arm2right.png ./body/beastie/black_arm2left.png ./body/beastie/black_arm3le"\
"ft.png ./body/beastie/noze.png ./body/beastie/black_footright.png ./body/beastie/hornunderleft.png ./body/beastie/black_hornoverright.png ./body/bea"\
"stie/black_back.png ./body/beastie/arm3left.png ./body/beastie/black_eyelid.png ./body/beastie/black_pupil.png ./body/beastie/pupil.png ./body/beast"\
"ie/hornunderright.png ./body/beastie/black_body.png ./body/beastie/black_hat.png ./body/beastie/hat.png ./body/beastie/tail.png ./body/beastie/arm3r"\
"ight.png ./body/beastie/config.xml ./body/beastie/black_noze.png ./body/beastie/arm2left.png ./body/beastie/black_arm1right.png ./body/badassgoat/bl"\
"ack_eyes.png ./body/badassgoat/black_hornoverleft.png ./body/badassgoat/black_tail.png ./body/badassgoat/sick_head.png ./body/badassgoat/black_arm1l"\
"eft.png ./body/badassgoat/black_arm3right.png ./body/badassgoat/black_hornleft.png ./body/badassgoat/hornoverleft.png ./body/badassgoat/body.png ./b"\
"ody/badassgoat/eyes.png ./body/badassgoat/dead.png ./body/badassgoat/black_head.png ./body/badassgoat/footleft.png ./body/badassgoat/footright.png ."\
"/body/badassgoat/black_hornunderright.png ./body/badassgoat/black_hornright.png ./body/badassgoat/hornright.png ./body/badassgoat/head.png ./body/ba"\
"dassgoat/hornoverright.png ./body/badassgoat/black_footleft.png ./body/badassgoat/eyelid.png ./body/badassgoat/black_hornunderleft.png ./body/badass"\
"goat/back.png ./body/badassgoat/arm1left.png ./body/badassgoat/black_arm2right.png ./body/badassgoat/arm1right.png ./body/badassgoat/arm2right.png ."\
"/body/badassgoat/black_arm2left.png ./body/badassgoat/black_arm3left.png ./body/badassgoat/noze.png ./body/badassgoat/black_footright.png ./body/bad"\
"assgoat/hornunderleft.png ./body/badassgoat/black_hornoverright.png ./body/badassgoat/black_back.png ./body/badassgoat/arm3left.png ./body/badassgoa"\
"t/black_eyelid.png ./body/badassgoat/black_pupil.png ./body/badassgoat/pupil.png ./body/badassgoat/hornunderright.png ./body/badassgoat/black_body.p"\
"ng ./body/badassgoat/black_hat.png ./body/badassgoat/hat.png ./body/badassgoat/tail.png ./body/badassgoat/arm3right.png ./body/badassgoat/config.xml"\
" ./body/badassgoat/black_noze.png ./body/badassgoat/arm2left.png ./body/badassgoat/hornleft.png ./body/badassgoat/black_arm1right.png ./body/snort/b"\
"lack_eyes.png ./body/snort/black_hornoverleft.png ./body/snort/black_tail.png ./body/snort/sick_head.png ./body/snort/black_arm1left.png ./body/snor"\
"t/black_arm3right.png ./body/snort/hornoverleft.png ./body/snort/body.png ./body/snort/eyes.png ./body/snort/dead.png ./body/snort/black_head.png ./"\
"body/snort/footleft.png ./body/snort/footright.png ./body/snort/black_hornunderright.png ./body/snort/head.png ./body/snort/hornoverright.png ./body"\
"/snort/black_footleft.png ./body/snort/eyelid.png ./body/snort/black_hornunderleft.png ./body/snort/back.png ./body/snort/arm1left.png ./body/snort/"\
"black_arm2right.png ./body/snort/arm1right.png ./body/snort/arm2right.png ./body/snort/black_arm2left.png ./body/snort/black_arm3left.png ./body/sno"\
"rt/noze.png ./body/snort/black_footright.png ./body/snort/hornunderleft.png ./body/snort/black_hornoverright.png ./body/snort/black_back.png ./body/"\
"snort/arm3left.png ./body/snort/black_eyelid.png ./body/snort/black_pupil.png ./body/snort/pupil.png ./body/snort/hornunderright.png ./body/snort/bl"\
"ack_body.png ./body/snort/black_hat.png ./body/snort/hat.png ./body/snort/tail.png ./body/snort/arm3right.png ./body/snort/config.xml ./body/snort/b"\
"lack_noze.png ./body/snort/arm2left.png ./body/snort/black_arm1right.png ./body/konqi/black_eyes.png ./body/konqi/black_hornoverleft.png ./body/konq"\
"i/black_tail.png ./body/konqi/sick_head.png ./body/konqi/black_arm1left.png ./body/konqi/black_arm3right.png ./body/konqi/hornoverleft.png ./body/ko"\
"nqi/body.png ./body/konqi/eyes.png ./body/konqi/dead.png ./body/konqi/black_head.png ./body/konqi/footleft.png ./body/konqi/footright.png ./body/kon"\
"qi/black_hornunderright.png ./body/konqi/head.png ./body/konqi/hornoverright.png ./body/konqi/black_footleft.png ./body/konqi/eyelid.png ./body/konq"\
"i/black_hornunderleft.png ./body/konqi/back.png ./body/konqi/arm1left.png ./body/konqi/black_arm2right.png ./body/konqi/arm1right.png ./body/konqi/a"\
"rm2right.png ./body/konqi/black_arm2left.png ./body/konqi/black_arm3left.png ./body/konqi/noze.png ./body/konqi/black_footright.png ./body/konqi/hor"\
"nunderleft.png ./body/konqi/black_hornoverright.png ./body/konqi/black_back.png ./body/konqi/arm3left.png ./body/konqi/black_eyelid.png ./body/konqi"\
"/black_pupil.png ./body/konqi/pupil.png ./body/konqi/hornunderright.png ./body/konqi/black_body.png ./body/konqi/black_hat.png ./body/konqi/hat.png "\
"./body/konqi/tail.png ./body/konqi/arm3right.png ./body/konqi/config.xml ./body/konqi/black_noze.png ./body/konqi/arm2left.png ./body/konqi/black_ar"\
"m1right.png ./body/postfix/black_eyes.png ./body/postfix/black_hornoverleft.png ./body/postfix/black_tail.png ./body/postfix/sick_head.png ./body/po"\
"stfix/black_arm1left.png ./body/postfix/black_arm3right.png ./body/postfix/black_hornleft.png ./body/postfix/hornoverleft.png ./body/postfix/body.pn"\
"g ./body/postfix/eyes.png ./body/postfix/dead.png ./body/postfix/black_head.png ./body/postfix/footleft.png ./body/postfix/footright.png ./body/post"\
"fix/black_hornunderright.png ./body/postfix/black_hornright.png ./body/postfix/hornright.png ./body/postfix/head.png ./body/postfix/hornoverright.pn"\
"g ./body/postfix/black_footleft.png ./body/postfix/eyelid.png ./body/postfix/black_hornunderleft.png ./body/postfix/back.png ./body/postfix/arm1left"\
".png ./body/postfix/black_arm2right.png ./body/postfix/arm1right.png ./body/postfix/arm2right.png ./body/postfix/black_arm2left.png ./body/postfix/b"\
"lack_arm3left.png ./body/postfix/noze.png ./body/postfix/black_footright.png ./body/postfix/hornunderleft.png ./body/postfix/black_hornoverright.png"\
" ./body/postfix/black_back.png ./body/postfix/arm3left.png ./body/postfix/black_eyelid.png ./body/postfix/black_pupil.png ./body/postfix/pupil.png ."\
"/body/postfix/hornunderright.png ./body/postfix/black_body.png ./body/postfix/black_hat.png ./body/postfix/hat.png ./body/postfix/tail.png ./body/po"\
"stfix/arm3right.png ./body/postfix/config.xml ./body/postfix/black_noze.png ./body/postfix/arm2left.png ./body/postfix/hornleft.png ./body/postfix/b"\
"lack_arm1right.png ./body/skeletons.xml ./body/movements.xml ./body/workrave/black_eyes.png ./body/workrave/black_hornoverleft.png ./body/workrave/b"\
"lack_tail.png ./body/workrave/sick_head.png ./body/workrave/black_arm1left.png ./body/workrave/black_arm3right.png ./body/workrave/black_hornleft.pn"\
"g ./body/workrave/hornoverleft.png ./body/workrave/body.png ./body/workrave/eyes.png ./body/workrave/dead.png ./body/workrave/black_head.png ./body/"\
"workrave/footleft.png ./body/workrave/footright.png ./body/workrave/black_hornunderright.png ./body/workrave/black_hornright.png ./body/workrave/hor"\
"nright.png ./body/workrave/head.png ./body/workrave/hornoverright.png ./body/workrave/black_footleft.png ./body/workrave/eyelid.png ./body/workrave/"\
"black_hornunderleft.png ./body/workrave/back.png ./body/workrave/arm1left.png ./body/workrave/black_arm2right.png ./body/workrave/arm1right.png ./bo"\
"dy/workrave/arm2right.png ./body/workrave/black_arm2left.png ./body/workrave/black_arm3left.png ./body/workrave/noze.png ./body/workrave/black_footr"\
"ight.png ./body/workrave/hornunderleft.png ./body/workrave/black_hornoverright.png ./body/workrave/black_back.png ./body/workrave/arm3left.png ./bod"\
"y/workrave/black_eyelid.png ./body/workrave/black_pupil.png ./body/workrave/pupil.png ./body/workrave/hornunderright.png ./body/workrave/black_body."\
"png ./body/workrave/black_hat.png ./body/workrave/hat.png ./body/workrave/tail.png ./body/workrave/arm3right.png ./body/workrave/config.xml ./body/w"\
"orkrave/black_noze.png ./body/workrave/arm2left.png ./body/workrave/hornleft.png ./body/workrave/black_arm1right.png ./body/firefox/black_eyes.png ."\
"/body/firefox/black_hornoverleft.png ./body/firefox/black_tail.png ./body/firefox/sick_head.png ./body/firefox/black_arm1left.png ./body/firefox/bla"\
"ck_arm3right.png ./body/firefox/hornoverleft.png ./body/firefox/body.png ./body/firefox/eyes.png ./body/firefox/dead.png ./body/firefox/black_head.p"\
"ng ./body/firefox/footleft.png ./body/firefox/footright.png ./body/firefox/black_hornunderright.png ./body/firefox/head.png ./body/firefox/hornoverr"\
"ight.png ./body/firefox/black_footleft.png ./body/firefox/eyelid.png ./body/firefox/black_hornunderleft.png ./body/firefox/back.png ./body/firefox/a"\
"rm1left.png ./body/firefox/black_arm2right.png ./body/firefox/arm1right.png ./body/firefox/arm2right.png ./body/firefox/black_arm2left.png ./body/fi"\
"refox/black_arm3left.png ./body/firefox/noze.png ./body/firefox/black_footright.png ./body/firefox/hornunderleft.png ./body/firefox/black_hornoverri"\
"ght.png ./body/firefox/black_back.png ./body/firefox/arm3left.png ./body/firefox/black_eyelid.png ./body/firefox/black_pupil.png ./body/firefox/pupi"\
"l.png ./body/firefox/hornunderright.png ./body/firefox/black_body.png ./body/firefox/black_hat.png ./body/firefox/hat.png ./body/firefox/tail.png ./"\
"body/firefox/arm3right.png ./body/firefox/config.xml ./body/firefox/black_noze.png ./body/firefox/arm2left.png ./body/firefox/black_arm1right.png ./"\
"body/thunderbird/black_eyes.png ./body/thunderbird/black_hornoverleft.png ./body/thunderbird/black_tail.png ./body/thunderbird/sick_head.png ./body/"\
"thunderbird/black_arm1left.png ./body/thunderbird/black_arm3right.png ./body/thunderbird/black_hornleft.png ./body/thunderbird/hornoverleft.png ./bo"\
"dy/thunderbird/body.png ./body/thunderbird/eyes.png ./body/thunderbird/dead.png ./body/thunderbird/black_head.png ./body/thunderbird/footleft.png ./"\
"body/thunderbird/footright.png ./body/thunderbird/black_hornunderright.png ./body/thunderbird/black_hornright.png ./body/thunderbird/hornright.png ."\
"/body/thunderbird/head.png ./body/thunderbird/hornoverright.png ./body/thunderbird/black_footleft.png ./body/thunderbird/eyelid.png ./body/thunderbi"\
"rd/black_hornunderleft.png ./body/thunderbird/back.png ./body/thunderbird/arm1left.png ./body/thunderbird/black_arm2right.png ./body/thunderbird/arm"\
"1right.png ./body/thunderbird/arm2right.png ./body/thunderbird/black_arm2left.png ./body/thunderbird/black_arm3left.png ./body/thunderbird/noze.png "\
"./body/thunderbird/black_footright.png ./body/thunderbird/hornunderleft.png ./body/thunderbird/black_hornoverright.png ./body/thunderbird/black_back"\
".png ./body/thunderbird/arm3left.png ./body/thunderbird/black_eyelid.png ./body/thunderbird/black_pupil.png ./body/thunderbird/pupil.png ./body/thun"\
"derbird/hornunderright.png ./body/thunderbird/black_body.png ./body/thunderbird/black_hat.png ./body/thunderbird/hat.png ./body/thunderbird/tail.png"\
" ./body/thunderbird/arm3right.png ./body/thunderbird/config.xml ./body/thunderbird/black_noze.png ./body/thunderbird/arm2left.png ./body/thunderbird"\
"/hornleft.png ./body/thunderbird/black_arm1right.png ./body/clothes.xml ./body/suse/black_eyes.png ./body/suse/black_hornoverleft.png ./body/suse/bl"\
"ack_tail.png ./body/suse/sick_head.png ./body/suse/black_arm1left.png ./body/suse/black_arm3right.png ./body/suse/hornoverleft.png ./body/suse/body."\
"png ./body/suse/eyes.png ./body/suse/dead.png ./body/suse/black_head.png ./body/suse/footleft.png ./body/suse/footright.png ./body/suse/black_hornun"\
"derright.png ./body/suse/head.png ./body/suse/hornoverright.png ./body/suse/black_footleft.png ./body/suse/eyelid.png ./body/suse/black_hornunderlef"\
"t.png ./body/suse/back.png ./body/suse/arm1left.png ./body/suse/black_arm2right.png ./body/suse/arm1right.png ./body/suse/arm2right.png ./body/suse/"\
"black_arm2left.png ./body/suse/black_arm3left.png ./body/suse/noze.png ./body/suse/black_footright.png ./body/suse/hornunderleft.png ./body/suse/bla"\
"ck_hornoverright.png ./body/suse/black_back.png ./body/suse/arm3left.png ./body/suse/black_eyelid.png ./body/suse/black_pupil.png ./body/suse/pupil."\
"png ./body/suse/hornunderright.png ./body/suse/black_body.png ./body/suse/black_hat.png ./body/suse/hat.png ./body/suse/tail.png ./body/suse/arm3rig"\
"ht.png ./body/suse/config.xml ./body/suse/black_noze.png ./body/suse/arm2left.png ./body/suse/black_arm1right.png ./body/spip/black_eyes.png ./body/"\
"spip/black_hornoverleft.png ./body/spip/black_tail.png ./body/spip/sick_head.png ./body/spip/black_arm1left.png ./body/spip/black_arm3right.png ./bo"\
"dy/spip/hornoverleft.png ./body/spip/body.png ./body/spip/eyes.png ./body/spip/dead.png ./body/spip/black_head.png ./body/spip/footleft.png ./body/s"\
"pip/footright.png ./body/spip/black_hornunderright.png ./body/spip/head.png ./body/spip/hornoverright.png ./body/spip/black_footleft.png ./body/spip"\
"/eyelid.png ./body/spip/black_hornunderleft.png ./body/spip/back.png ./body/spip/arm1left.png ./body/spip/black_arm2right.png ./body/spip/arm1right."\
"png ./body/spip/arm2right.png ./body/spip/black_arm2left.png ./body/spip/black_arm3left.png ./body/spip/noze.png ./body/spip/black_footright.png ./b"\
"ody/spip/hornunderleft.png ./body/spip/black_hornoverright.png ./body/spip/black_back.png ./body/spip/arm3left.png ./body/spip/black_eyelid.png ./bo"\
"dy/spip/black_pupil.png ./body/spip/pupil.png ./body/spip/hornunderright.png ./body/spip/black_body.png ./body/spip/black_hat.png ./body/spip/hat.pn"\
"g ./body/spip/tail.png ./body/spip/arm3right.png ./body/spip/config.xml ./body/spip/black_noze.png ./body/spip/arm2left.png ./body/spip/black_arm1ri"\
"ght.png ./body/hexley/black_eyes.png ./body/hexley/black_hornoverleft.png ./body/hexley/black_tail.png ./body/hexley/sick_head.png ./body/hexley/bla"\
"ck_arm1left.png ./body/hexley/black_arm3right.png ./body/hexley/black_hornleft.png ./body/hexley/hornoverleft.png ./body/hexley/body.png ./body/hexl"\
"ey/eyes.png ./body/hexley/dead.png ./body/hexley/black_head.png ./body/hexley/footleft.png ./body/hexley/footright.png ./body/hexley/black_hornunder"\
"right.png ./body/hexley/black_hornright.png ./body/hexley/hornright.png ./body/hexley/head.png ./body/hexley/hornoverright.png ./body/hexley/black_f"\
"ootleft.png ./body/hexley/eyelid.png ./body/hexley/black_hornunderleft.png ./body/hexley/back.png ./body/hexley/arm1left.png ./body/hexley/black_arm"\
"2right.png ./body/hexley/arm1right.png ./body/hexley/arm2right.png ./body/hexley/black_arm2left.png ./body/hexley/black_arm3left.png ./body/hexley/n"\
"oze.png ./body/hexley/black_footright.png ./body/hexley/hornunderleft.png ./body/hexley/black_hornoverright.png ./body/hexley/black_back.png ./body/"\
"hexley/arm3left.png ./body/hexley/black_eyelid.png ./body/hexley/black_pupil.png ./body/hexley/pupil.png ./body/hexley/hornunderright.png ./body/hex"\
"ley/black_body.png ./body/hexley/black_hat.png ./body/hexley/hat.png ./body/hexley/hornoveleft.png ./body/hexley/tail.png ./body/hexley/arm3right.pn"\
"g ./body/hexley/config.xml ./body/hexley/black_noze.png ./body/hexley/arm2left.png ./body/hexley/hornleft.png ./body/hexley/black_arm1right.png ./bo"\
"dy/php/black_eyes.png ./body/php/black_hornoverleft.png ./body/php/black_tail.png ./body/php/sick_head.png ./body/php/black_arm1left.png ./body/php/"\
"black_arm3right.png ./body/php/black_hornleft.png ./body/php/hornoverleft.png ./body/php/body.png ./body/php/eyes.png ./body/php/dead.png ./body/php"\
"/black_head.png ./body/php/hornrightright.png ./body/php/footleft.png ./body/php/footright.png ./body/php/black_hornunderright.png ./body/php/black_"\
"hornright.png ./body/php/head.png ./body/php/hornoverright.png ./body/php/black_footleft.png ./body/php/eyelid.png ./body/php/black_hornunderleft.pn"\
"g ./body/php/back.png ./body/php/arm1left.png ./body/php/black_arm2right.png ./body/php/arm1right.png ./body/php/arm2right.png ./body/php/black_arm2"\
"left.png ./body/php/black_arm3left.png ./body/php/noze.png ./body/php/black_footright.png ./body/php/hornunderleft.png ./body/php/black_hornoverrigh"\
"t.png ./body/php/black_back.png ./body/php/arm3left.png ./body/php/black_eyelid.png ./body/php/black_pupil.png ./body/php/pupil.png ./body/php/hornu"\
"nderright.png ./body/php/black_body.png ./body/php/black_hat.png ./body/php/hat.png ./body/php/tail.png ./body/php/arm3right.png ./body/php/config.x"\
"ml ./body/php/black_noze.png ./body/php/arm2left.png ./body/php/black_arm1right.png ./body/gnu/black_eyes.png ./body/gnu/black_hornoverleft.png ./bo"\
"dy/gnu/black_tail.png ./body/gnu/sick_head.png ./body/gnu/black_arm1left.png ./body/gnu/black_arm3right.png ./body/gnu/hornoverleft.png ./body/gnu/b"\
"ody.png ./body/gnu/eyes.png ./body/gnu/dead.png ./body/gnu/black_head.png ./body/gnu/footleft.png ./body/gnu/footright.png ./body/gnu/black_hornunde"\
"rright.png ./body/gnu/head.png ./body/gnu/hornoverright.png ./body/gnu/black_footleft.png ./body/gnu/eyelid.png ./body/gnu/black_hornunderleft.png ."\
"/body/gnu/back.png ./body/gnu/arm1left.png ./body/gnu/black_arm2right.png ./body/gnu/arm1right.png ./body/gnu/arm2right.png ./body/gnu/black_arm2lef"\
"t.png ./body/gnu/black_arm3left.png ./body/gnu/noze.png ./body/gnu/black_footright.png ./body/gnu/hornunderleft.png ./body/gnu/black_hornoverright.p"\
"ng ./body/gnu/black_back.png ./body/gnu/arm3left.png ./body/gnu/black_eyelid.png ./body/gnu/black_pupil.png ./body/gnu/pupil.png ./body/gnu/hornunde"\
"rright.png ./body/gnu/black_body.png ./body/gnu/black_hat.png ./body/gnu/hat.png ./body/gnu/tail.png ./body/gnu/arm3right.png ./body/gnu/config.xml "\
"./body/gnu/black_noze.png ./body/gnu/arm2left.png ./body/gnu/black_arm1right.png ./body/body.dtd ./body/all_skins_objects/hoop.png ./body/all_skins_"\
"objects/jetpack.png ./body/all_skins_objects/c2.png ./body/all_skins_objects/baseball_tshirt.png ./body/all_skins_objects/hula.png ./body/all_skins_"\
"objects/c1.png ./body/all_skins_objects/foothelmet2.png ./body/all_skins_objects/foothelmet1.png ./body/all_skins_objects/cowboy_hat.png ./body/all_"\
"skins_objects/baseball_cap.png ./body/all_skins_objects/helmet.png ./body/all_skins_objects/yoyo.png ./body/all_skins_objects/belt.png ./body/all_sk"\
"ins_objects/jetpack-fire.png ./body/pidgin/black_eyes.png ./body/pidgin/black_hornoverleft.png ./body/pidgin/black_tail.png ./body/pidgin/sick_head."\
"png ./body/pidgin/black_arm1left.png ./body/pidgin/black_arm3right.png ./body/pidgin/hornoverleft.png ./body/pidgin/body.png ./body/pidgin/eyes.png "\
"./body/pidgin/dead.png ./body/pidgin/black_head.png ./body/pidgin/footleft.png ./body/pidgin/footright.png ./body/pidgin/black_hornunderright.png ./"\
"body/pidgin/head.png ./body/pidgin/hornoverright.png ./body/pidgin/black_footleft.png ./body/pidgin/eyelid.png ./body/pidgin/black_hornunderleft.png"\
" ./body/pidgin/back.png ./body/pidgin/arm1left.png ./body/pidgin/black_arm2right.png ./body/pidgin/arm1right.png ./body/pidgin/arm2right.png ./body/"\
"pidgin/black_arm2left.png ./body/pidgin/black_arm3left.png ./body/pidgin/noze.png ./body/pidgin/black_footright.png ./body/pidgin/hornunderleft.png "\
"./body/pidgin/black_hornoverright.png ./body/pidgin/black_back.png ./body/pidgin/arm3left.png ./body/pidgin/black_eyelid.png ./body/pidgin/black_pup"\
"il.png ./body/pidgin/pupil.png ./body/pidgin/hornunderright.png ./body/pidgin/black_body.png ./body/pidgin/black_hat.png ./body/pidgin/hat.png ./bod"\
"y/pidgin/tail.png ./body/pidgin/arm3right.png ./body/pidgin/config.xml ./body/pidgin/black_noze.png ./body/pidgin/arm2left.png ./body/pidgin/black_a"\
"rm1right.png ./body/bugzilla/black_eyes.png ./body/bugzilla/black_hornoverleft.png ./body/bugzilla/black_tail.png ./body/bugzilla/sick_head.png ./bo"\
"dy/bugzilla/black_arm1left.png ./body/bugzilla/black_arm3right.png ./body/bugzilla/hornoverleft.png ./body/bugzilla/body.png ./body/bugzilla/eyes.pn"\
"g ./body/bugzilla/dead.png ./body/bugzilla/black_head.png ./body/bugzilla/footleft.png ./body/bugzilla/footright.png ./body/bugzilla/black_hornunder"\
"right.png ./body/bugzilla/head.png ./body/bugzilla/hornoverright.png ./body/bugzilla/black_footleft.png ./body/bugzilla/eyelid.png ./body/bugzilla/b"\
"lack_hornunderleft.png ./body/bugzilla/back.png ./body/bugzilla/arm1left.png ./body/bugzilla/black_arm2right.png ./body/bugzilla/arm1right.png ./bod"\
"y/bugzilla/arm2right.png ./body/bugzilla/black_arm2left.png ./body/bugzilla/black_arm3left.png ./body/bugzilla/noze.png ./body/bugzilla/black_footri"\
"ght.png ./body/bugzilla/hornunderleft.png ./body/bugzilla/black_hornoverright.png ./body/bugzilla/black_back.png ./body/bugzilla/arm3left.png ./body"\
"/bugzilla/black_eyelid.png ./body/bugzilla/black_pupil.png ./body/bugzilla/pupil.png ./body/bugzilla/hornunderright.png ./body/bugzilla/black_body.p"\
"ng ./body/bugzilla/black_hat.png ./body/bugzilla/hat.png ./body/bugzilla/tail.png ./body/bugzilla/arm3right.png ./body/bugzilla/config.xml ./body/bu"\
"gzilla/black_noze.png ./body/bugzilla/arm2left.png ./body/bugzilla/black_arm1right.png ./body/wilber/black_eyes.png ./body/wilber/black_hornoverleft"\
".png ./body/wilber/black_tail.png ./body/wilber/sick_head.png ./body/wilber/black_arm1left.png ./body/wilber/black_arm3right.png ./body/wilber/horno"\
"verleft.png ./body/wilber/body.png ./body/wilber/eyes.png ./body/wilber/dead.png ./body/wilber/black_head.png ./body/wilber/footleft.png ./body/wilb"\
"er/footright.png ./body/wilber/black_hornunderright.png ./body/wilber/head.png ./body/wilber/hornoverright.png ./body/wilber/black_footleft.png ./bo"\
"dy/wilber/eyelid.png ./body/wilber/black_hornunderleft.png ./body/wilber/back.png ./body/wilber/arm1left.png ./body/wilber/black_arm2right.png ./bod"\
"y/wilber/arm1right.png ./body/wilber/arm2right.png ./body/wilber/black_arm2left.png ./body/wilber/black_arm3left.png ./body/wilber/noze.png ./body/w"\
"ilber/black_footright.png ./body/wilber/hornunderleft.png ./body/wilber/black_hornoverright.png ./body/wilber/black_back.png ./body/wilber/arm3left."\
"png ./body/wilber/black_eyelid.png ./body/wilber/black_pupil.png ./body/wilber/pupil.png ./body/wilber/hornunderright.png ./body/wilber/black_body.p"\
"ng ./body/wilber/black_hat.png ./body/wilber/hat.png ./body/wilber/tail.png ./body/wilber/arm3right.png ./body/wilber/config.xml ./body/wilber/black"\
"_noze.png ./body/wilber/arm2left.png ./body/wilber/black_arm1right.png ./water/dirtywater/dirtywater.png ./water/dirtywater/dirtywater_drop.png ./wa"\
"ter/radioactive/radioactive_drop.png ./water/radioactive/radioactive.png ./water/wine/wine_drop.png ./water/wine/wine.png ./water/lava/lava.png ./wa"\
"ter/lava/lava_drop.png ./water/water/water_drop.png ./water/water/water.png ./water/chocolate/chocolate.png ./water/chocolate/chocolate_drop.png ./f"\
"ont/VL-Gothic-Regular.ttf ./font/wqy-microhei-lite.ttc ./object/smokea.png ./object/pink_star.png ./object/blue_star.png ./object/barrel.png ./objec"\
"t/kaboom.png ./object/smoke.png ./object/yellow_star.png ./object/ill_bubble.png ./object/smoke2.png ./object/kaboomk.png ./object/dark_smoke.png ./"\
"object/smoke3.png ./object/star.png ./object/fire.png ./object/medkit.png ./object/bonus_box.png ./graphism.xml"
S["MAEMO_FALSE"]=""
S["MAEMO_TRUE"]="#"
S["LIBDBUS_LIBS"]=""
S["LIBDBUS_CFLAGS"]=""
S["LIBGLIB_LIBS"]=""
S["LIBGLIB_CFLAGS"]=""
S["osso_LIBS"]=""
S["osso_CFLAGS"]=""
S["LIBCURL"]="-L/usr/lib/x86_64-linux-gnu -lcurl"
S["LIBCURL_CPPFLAGS"]=""
S["_libcurl_config"]=""
S["SDL_GFX_PREFIX"]=""
S["FRIBIDI_LIBS"]=""
S["FRIBIDI_CFLAGS"]=""
S["LIBPNG_LIBS"]="-lpng12  "
S["LIBPNG_CFLAGS"]="-I/usr/include/libpng12  "
S["LIBXML2_LIBS"]="-lxml2  "
S["LIBXML2_CFLAGS"]="-I/usr/include/libxml2  "
S["PKG_CONFIG_LIBDIR"]=""
S["PKG_CONFIG_PATH"]=""
S["PKG_CONFIG"]="/usr/bin/pkg-config"
S["SDL_LIBS"]="-L/usr/lib/x86_64-linux-gnu -lSDL"
S["SDL_CFLAGS"]="-I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT"
S["SDL_CONFIG"]="/usr/bin/sdl-config"
S["GCC_FALSE"]="#"
S["GCC_TRUE"]=""
S["STATIC_FALSE"]=""
S["STATIC_TRUE"]="#"
S["FONTFILE"]="${DATADIR}/font/Ubuntu-R.ttf"
S["LOCALEDIR"]="/usr/local/share/locale"
S["DATADIR"]="/usr/local/share/warmux/"
S["BUILD_SERVERS_FALSE"]=""
S["BUILD_SERVERS_TRUE"]="#"
S["WIN32_FALSE"]=""
S["WIN32_TRUE"]="#"
S["cxx_present"]="yes"
S["WINDRES"]=""
S["RANLIB"]="ranlib"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="-Wall -Wextra -Wall -Wextra -g -O2 -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/libpng12   -I/usr/include/libxml2   -fno-rtti -fno"\
"-exceptions"
S["CXX"]="g++"
S["NLS_FALSE"]="#"
S["NLS_TRUE"]=""
S["POSUB"]="po"
S["LTLIBINTL"]=""
S["LIBINTL"]=""
S["INTLLIBS"]=""
S["LTLIBICONV"]="-liconv"
S["LIBICONV"]="-liconv"
S["INTL_MACOSX_LIBS"]=""
S["EGREP"]="/bin/grep -E"
S["GREP"]="/bin/grep"
S["CPP"]="gcc -E"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]=" -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT"
S["LDFLAGS"]=""
S["CFLAGS"]="-Wall -Wextra -g -O2 -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/libpng12   -I/usr/include/libxml2  "
S["CC"]="gcc"
S["XGETTEXT_EXTRA_OPTIONS"]=""
S["MSGMERGE"]="/usr/bin/msgmerge"
S["XGETTEXT_015"]="/usr/bin/xgettext"
S["XGETTEXT"]="/usr/bin/xgettext"
S["GMSGFMT_015"]="/usr/bin/msgfmt"
S["MSGFMT_015"]="/usr/bin/msgfmt"
S["GMSGFMT"]="/usr/bin/msgfmt"
S["MSGFMT"]="/usr/bin/msgfmt"
S["GETTEXT_MACRO_VERSION"]="0.18"
S["USE_NLS"]="yes"
S["am__untar"]="$${TAR-tar} xf -"
S["am__tar"]="$${TAR-tar} chof - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="mawk"
S["mkdir_p"]="/bin/mkdir -p"
S["MKDIR_P"]="/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack/install-sh"
S["MAKEINFO"]="${SHELL} /home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack/missing --run makeinfo"
S["AUTOHEADER"]="${SHELL} /home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack/missing --run autoheader"
S["AUTOMAKE"]="${SHELL} /home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack/missing --run automake-1.11"
S["AUTOCONF"]="${SHELL} /home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack/missing --run autoconf"
S["ACLOCAL"]="${SHELL} /home/arnaud/ProjetMod/Warmux/warmux-11.04.1+repack/missing --run aclocal-1.11"
S["VERSION"]="11.04"
S["PACKAGE"]="warmux"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_os"]="linux-gnu"
S["target_vendor"]="unknown"
S["target_cpu"]="x86_64"
S["target"]="x86_64-unknown-linux-gnu"
S["host_os"]="linux-gnu"
S["host_vendor"]="unknown"
S["host_cpu"]="x86_64"
S["host"]="x86_64-unknown-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="unknown"
S["build_cpu"]="x86_64"
S["build"]="x86_64-unknown-linux-gnu"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]="-lSDL_net -lSDL_ttf -lSDL_mixer -lSDL_image -lSDL_gfx  -L/usr/lib/x86_64-linux-gnu -lSDL -lX11 -lpng12   -lxml2  "
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="warmux-dev@gna.org"
S["PACKAGE_STRING"]="Warmux 11.04"
S["PACKAGE_VERSION"]="11.04"
S["PACKAGE_TARNAME"]="warmux"
S["PACKAGE_NAME"]="Warmux"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/bash"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"Warmux\""
D["PACKAGE_TARNAME"]=" \"warmux\""
D["PACKAGE_VERSION"]=" \"11.04\""
D["PACKAGE_STRING"]=" \"Warmux 11.04\""
D["PACKAGE_BUGREPORT"]=" \"warmux-dev@gna.org\""
D["PACKAGE_URL"]=" \"\""
D["PACKAGE"]=" \"warmux\""
D["VERSION"]=" \"11.04\""
D["ENABLE_NLS"]=" 1"
D["HAVE_GETTEXT"]=" 1"
D["HAVE_DCGETTEXT"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["USE_X11"]=" 1"
D["HAVE_LIBSDL_GFX"]=" 1"
D["HAVE_LIBCURL"]=" 1"
D["LIBCURL_FEATURE_SSL"]=" 1"
D["LIBCURL_FEATURE_IPV6"]=" 1"
D["LIBCURL_FEATURE_LIBZ"]=" 1"
D["LIBCURL_FEATURE_ASYNCHDNS"]=" 1"
D["LIBCURL_FEATURE_IDN"]=" 1"
D["LIBCURL_FEATURE_NTLM"]=" 1"
D["LIBCURL_FEATURE_NTLM_WB"]=" 1"
D["LIBCURL_FEATURE_TLS_SRP"]=" 1"
D["LIBCURL_PROTOCOL_DICT"]=" 1"
D["LIBCURL_PROTOCOL_FILE"]=" 1"
D["LIBCURL_PROTOCOL_FTP"]=" 1"
D["LIBCURL_PROTOCOL_FTPS"]=" 1"
D["LIBCURL_PROTOCOL_GOPHER"]=" 1"
D["LIBCURL_PROTOCOL_HTTP"]=" 1"
D["LIBCURL_PROTOCOL_HTTPS"]=" 1"
D["LIBCURL_PROTOCOL_IMAP"]=" 1"
D["LIBCURL_PROTOCOL_IMAPS"]=" 1"
D["LIBCURL_PROTOCOL_LDAP"]=" 1"
D["LIBCURL_PROTOCOL_LDAPS"]=" 1"
D["LIBCURL_PROTOCOL_POP3"]=" 1"
D["LIBCURL_PROTOCOL_POP3S"]=" 1"
D["LIBCURL_PROTOCOL_RTMP"]=" 1"
D["LIBCURL_PROTOCOL_RTSP"]=" 1"
D["LIBCURL_PROTOCOL_SMTP"]=" 1"
D["LIBCURL_PROTOCOL_SMTPS"]=" 1"
D["LIBCURL_PROTOCOL_TELNET"]=" 1"
D["LIBCURL_PROTOCOL_TFTP"]=" 1"
D["HAVE_LIBSDL_IMAGE"]=" 1"
D["HAVE_LIBSDL_MIXER"]=" 1"
D["HAVE_LIBSDL_TTF"]=" 1"
D["HAVE_LIBSDL_NET"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["STDC_HEADERS"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "po-directories":C)
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            # Hide the ALL_LINGUAS assigment from automake < 1.5.
            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            # Hide the ALL_LINGUAS assigment from automake < 1.5.
            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done ;;
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;
    "data/Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;
    "src/Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;
    "lib/Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;
    "lib/fixedpoint/Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;
    "lib/warmux/Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;
    "po/Makefile":F)
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT

EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^[	 ]*VARIABLE[	 ]*=/{
  # Seen the first line of the variable definition.
  s/^[	 ]*VARIABLE[	 ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assigment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
	@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
	\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
	@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
	\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
 ;;

  esac
done # for ac_tag


as_fn_exit 0
